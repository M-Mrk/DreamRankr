.mobileView {
    display: block;
}

.normalView {
    display: none;
}

@media (min-width: 1000px) {
    .mobileView {
        display: none;
    }
    .normalView {
        display: block;
    }
}

.gridContainer {
    width: 100%;
    max-width: 100vw;
    display: grid;
    grid-template-columns: 1fr 400px;
    grid-template-rows: 1fr;
    grid-column-gap: 1rem;
    grid-row-gap: 0px;
    box-sizing: border-box;
    padding: 0 1rem;
    height: 100vh; /* Set container height to viewport height */
    max-height: 100vh; /* Prevent growing beyond viewport */
}

.tableColumn {
    grid-area: 1 / 1 / 2 / 2;
    min-width: 0;
    height: 100%;
    display: flex;
    flex-direction: column;
    /* Remove overflow-y here */
}

.table-responsive {
    flex: 1 1 0%;
    min-height: 0;
    overflow-y: auto;
    overflow-x: auto;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
}

/* Keep table header sticky while scrolling */
.table-responsive table {
    margin-bottom: 0; /* Remove default table margin */
}

.table-responsive thead th {
    position: sticky;
    top: 0;
    background-color: var(--bs-dark); /* Ensure header background stays solid */
    z-index: 10; /* Keep header above content */
}


.otherColumn {
    grid-area: 1 / 2 / 2 / 3;
    max-width: 400px;
    width: 100%;
    overflow-y: auto;      /* Enable vertical scrolling */
    height: 100%;          /* Fill grid row */
    max-height: none;      /* Remove max-height restriction */
}

.mobileView .table-responsive {
    max-height: 60vh; /* Limit table height on mobile */
    overflow-y: auto;
    overflow-x: auto;
    margin-bottom: 2rem; /* Add space before other sections */
}

/* Alternative approach - if you prefer responsive columns */
.gridContainer-responsive {
    width: 100%;
    max-width: 100vw;
    display: grid;
    grid-template-columns: minmax(300px, 2fr) minmax(250px, 1fr); /* Responsive but constrained */
    grid-template-rows: 1fr;
    grid-column-gap: 1rem;
    grid-row-gap: 0px;
    box-sizing: border-box;
    padding: 0 1rem;
}

hr {
    width: 60%; /* Changed from 60vw to 60% to be relative to container */
    max-width: 300px; /* Prevent hr from being too wide */
    border-top: 5px solid rgba(0, 0, 0, 1);
}

.Divider {
    font-size: 25px;
    display: flex;
    align-items: center;
}

.Divider::after {
    flex: 1;
    content: '';
    padding: 3px;
    background-color: black;
    margin: 5px;
}

.input-group {
    display: flex;
    flex-direction: row;
    align-items: center;
    width: 100%;
}

.input-group * {
    margin: 0.5rem;
    width: 45%;
}

label {
    margin-left: 0.5rem;
}